name: Create Release

on:
  push:
    branches:
      - main  # Change this to your default branch if it's not main
  pull_request:
    types: [closed]
    branches:
      - main  # Only trigger on pull requests to the main branch
  workflow_dispatch:  # Allow manual trigger

jobs:
  codacy-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@

      - name: Run Codacy Analysis
        uses: codacy/codacy-analysis-cli-action@33d455949345bddfdb845fba76b57b70cc83754b
        with:
          api-token: ${{ secrets.CODACY }}

  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Fetch at least the last 2 commits

    - name: Set up date and time
      id: date
      run: |
        echo "DATE_TAG=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    - name: Check for changes in Mupdate.lua or Updater.lua
      id: check_changes
      run: |
        if git diff --name-only HEAD^ HEAD | grep -qE 'Mupdate.lua|Updater.lua'; then
          echo "CHANGED=true" >> $GITHUB_ENV
        else
          echo "CHANGED=false" >> $GITHUB_ENV
        fi

    - name: Create Release
      if: github.repository_owner == 'gesslar' && env.CHANGED == 'true'
      uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
      with:
        artifacts: "LICENSE,Mupdate.lua,Updater.lua,README.md"
        allowUpdates: true
        bodyFile: "./README.md"
        tag: ${{ env.DATE_TAG }}
        name: Release ${{ env.DATE_TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Determine if it's a merged PR or direct commit
      id: check_pr
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          echo "IS_MERGED=false" >> $GITHUB_ENV
        elif [ "${{ github.event.pull_request.merged }}" == "true" ]; then
          echo "IS_MERGED=true" >> $GITHUB_ENV
        else
          echo "IS_MERGED=false" >> $GITHUB_ENV
        fi
      shell: bash
