name: Update Submodules on Commit

on:
  push:
    branches:
      - main  # or specify the branch you want to trigger this workflow on

jobs:
  update-submodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Authenticate with GitHub CLI
        run: |
          echo "${{ secrets.WORKFLOW_TOKEN }}" | gh auth login --with-token

      - name: Test GitHub CLI authentication
        run: gh auth status

      - name: Get list of repositories with the topic 'mudlet-package'
        id: get_repos
        run: |
          repos=$(gh api search/repositories -q 'topic:mudlet-package' --jq 'items.[].full_name')
          echo "Found repositories: $repos"
          echo "::set-output name=repos::${repos}"
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Update submodules in each repository
        run: |
          IFS=$'\n' read -r -d '' -a repo_array <<< "${{ steps.get_repos.outputs.repos }}"
          for repo in "${repo_array[@]}"; do
            owner=$(echo $repo | cut -d'/' -f1)
            if [ "$owner" == "gesslar" ]; then
              echo "Processing repository $repo"
              git clone https://github.com/$repo temp_repo
              cd temp_repo
              git submodule update --remote --merge
              if [ -n "$(git status --porcelain)" ]; then
                echo "Changes detected in $repo, committing and pushing updates"
                git add .
                git commit -m "Update submodules"
                git push
              else
                echo "No changes detected in $repo"
              fi
              cd ..
              rm -rf temp_repo
            else
              echo "Skipping repository $repo as it is not owned by gesslar"
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
